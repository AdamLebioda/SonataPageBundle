<?php

// try to reuse lib defined in a current symfony2 project
$autoload = __dir__.'/../../../../../../app/autoload.php';

if (is_file($autoload)) {
    include $autoload;
} else {
    $vendordir = __dir__.'/../../vendor';
    require_once $vendordir.'/symfony/src/symfony/component/classloader/universalclassloader.php';

    $loader = new symfony\Component\Classloader\Universalclassloader();
    $loader->registernamespaces(array(
        'symfony'               => array($vendordir.'/symfony/src'),
        'sonata\Adminbundle'    => array($vendordir),
        'knp'                   => array($vendordir.'/knpmenu/src'),
        'doctrine\Common'       => array($vendordir.'/doctrine-common/lib'),
        'doctrine\Orm'          => array($vendordir.'/doctrine/lib'),
        'doctrine\Dbal'         => array($vendordir.'/doctrine-dbal/lib'),
        'monolog'               => array($vendordir.'/monolog/src')
    ));
    $loader->register();

    spl_autoload_register(function($class) {
        if (0 === strpos($class, 'sonata\\Pagebundle\\')) {
            $path = __dir__.'/../../'.implode('/', array_slice(explode('\\', $class), 2)).'.php';

            if (!stream_resolve_include_path($path)) {
                return false;
            }
            require_once $path;
            return true;
        }
    });
}
